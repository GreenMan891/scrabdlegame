// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// A special model to handle the sequential player ID counter
model Counter {
  id    String @id @default(cuid())
  name  String @unique // e.g., "playerId"
  value Int    @default(0)
}

// The main table for player profiles
model Player {
  id        Int      @id // This will be our sequential "username"
  highScore Int      @default(0)
  createdAt DateTime @default(now())

  // Relation to DailyScores
  scores DailyScore[]
}

// The table for storing daily game results
model DailyScore {
  id        String   @id @default(cuid())
  date      String // Stored as "YYYY-MM-DD"
  score     Int
  timeTaken Int // In seconds
  createdAt DateTime @default(now())

  // Relation to Player
  player   Player @relation(fields: [playerId], references: [id])
  playerId Int

  @@index([date, score]) // Add an index for faster leaderboard queries
}
